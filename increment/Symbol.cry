module Symbol where

import RawVal as RawVal
import RawVal (RawVal)

short : {n} (n <= 9) => String n -> RawVal
short s = RawVal::from_symbol_small (zext (join (map encode_char s)))

private

  encode_char : Char -> [6]
  encode_char ch =
    if ch == '_' then 1
    | elem ch ['0'..'9'] then 2 + drop (ch - '0')
    | elem ch ['A'..'Z'] then 12 + drop (ch - 'A')
    | elem ch ['a'..'z'] then 38 + drop (ch - 'a')
    else error
      ("symbol bad char: encountered " # [ch]
       # ", supported range [a-zA-Z0-9_]")
